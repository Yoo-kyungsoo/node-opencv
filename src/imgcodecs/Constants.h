#ifndef __IMGCODECS__CONSTANTS_H__
#define __IMGCODECS__CONSTANTS_H__

#include "common.h"

#define DEFINE_CONST(C) \
  Nan::Set(target, Nan::New<String>(#C).ToLocalChecked(), Nan::New<Integer>(C));

#define DEFINE_CONST_INT(C) \
  Nan::Set(target, Nan::New<String>(#C).ToLocalChecked(), Nan::New<Integer>((int)C));

#define DEFINE_CONST_ENUM(C) \
  Nan::Set(target, Nan::New<String>(#C).ToLocalChecked(), Nan::New<Integer>((int)(cv::C)));

class Constants {
public:
  static void Init(Local<Object> target) {
    // imread modes
    DEFINE_CONST_ENUM(IMREAD_UNCHANGED);
    DEFINE_CONST_ENUM(IMREAD_GRAYSCALE);
    DEFINE_CONST_ENUM(IMREAD_COLOR);
    DEFINE_CONST_ENUM(IMREAD_ANYDEPTH);
    DEFINE_CONST_ENUM(IMREAD_ANYCOLOR);
    DEFINE_CONST_ENUM(IMREAD_LOAD_GDAL);
    DEFINE_CONST_ENUM(IMREAD_REDUCED_GRAYSCALE_2);
    DEFINE_CONST_ENUM(IMREAD_REDUCED_COLOR_2);
    DEFINE_CONST_ENUM(IMREAD_REDUCED_GRAYSCALE_4);
    DEFINE_CONST_ENUM(IMREAD_REDUCED_COLOR_4);
    DEFINE_CONST_ENUM(IMREAD_REDUCED_GRAYSCALE_8);
    DEFINE_CONST_ENUM(IMREAD_REDUCED_COLOR_8);
    DEFINE_CONST_ENUM(IMREAD_IGNORE_ORIENTATION);

    // imwrite flags
    DEFINE_CONST_ENUM(IMWRITE_JPEG_QUALITY);
    DEFINE_CONST_ENUM(IMWRITE_JPEG_PROGRESSIVE);
    DEFINE_CONST_ENUM(IMWRITE_JPEG_OPTIMIZE);
    DEFINE_CONST_ENUM(IMWRITE_JPEG_RST_INTERVAL);
    DEFINE_CONST_ENUM(IMWRITE_JPEG_LUMA_QUALITY);
    DEFINE_CONST_ENUM(IMWRITE_JPEG_CHROMA_QUALITY);
    DEFINE_CONST_ENUM(IMWRITE_PNG_COMPRESSION);
    DEFINE_CONST_ENUM(IMWRITE_PNG_STRATEGY);
    DEFINE_CONST_ENUM(IMWRITE_PNG_BILEVEL);
    DEFINE_CONST_ENUM(IMWRITE_PXM_BINARY);
    DEFINE_CONST_ENUM(IMWRITE_WEBP_QUALITY);
    DEFINE_CONST_ENUM(IMWRITE_PAM_TUPLETYPE);

    // imwrite pam flags
    DEFINE_CONST_ENUM(IMWRITE_PAM_FORMAT_NULL);
    DEFINE_CONST_ENUM(IMWRITE_PAM_FORMAT_BLACKANDWHITE);
    DEFINE_CONST_ENUM(IMWRITE_PAM_FORMAT_GRAYSCALE);
    DEFINE_CONST_ENUM(IMWRITE_PAM_FORMAT_GRAYSCALE_ALPHA);
    DEFINE_CONST_ENUM(IMWRITE_PAM_FORMAT_RGB);
    DEFINE_CONST_ENUM(IMWRITE_PAM_FORMAT_RGB_ALPHA);

    // imwrite png flags
    DEFINE_CONST_ENUM(IMWRITE_PNG_STRATEGY_DEFAULT);
    DEFINE_CONST_ENUM(IMWRITE_PNG_STRATEGY_FILTERED);
    DEFINE_CONST_ENUM(IMWRITE_PNG_STRATEGY_HUFFMAN_ONLY);
    DEFINE_CONST_ENUM(IMWRITE_PNG_STRATEGY_RLE);
    DEFINE_CONST_ENUM(IMWRITE_PNG_STRATEGY_FIXED);
  }
};

#endif // __IMGCODECS__CONSTANTS_H__
